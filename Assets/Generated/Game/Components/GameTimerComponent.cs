//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity timerEntity { get { return GetGroup(GameMatcher.Timer).GetSingleEntity(); } }
    public TimerComponent timer { get { return timerEntity.timer; } }
    public bool hasTimer { get { return timerEntity != null; } }

    public GameEntity SetTimer(float newCurrentTime) {
        if (hasTimer) {
            throw new Entitas.EntitasException("Could not set Timer!\n" + this + " already has an entity with TimerComponent!",
                "You should check if the context already has a timerEntity before setting it or use context.ReplaceTimer().");
        }
        var entity = CreateEntity();
        entity.AddTimer(newCurrentTime);
        return entity;
    }

    public void ReplaceTimer(float newCurrentTime) {
        var entity = timerEntity;
        if (entity == null) {
            entity = SetTimer(newCurrentTime);
        } else {
            entity.ReplaceTimer(newCurrentTime);
        }
    }

    public void RemoveTimer() {
        timerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TimerComponent timer { get { return (TimerComponent)GetComponent(GameComponentsLookup.Timer); } }
    public bool hasTimer { get { return HasComponent(GameComponentsLookup.Timer); } }

    public void AddTimer(float newCurrentTime) {
        var index = GameComponentsLookup.Timer;
        var component = (TimerComponent)CreateComponent(index, typeof(TimerComponent));
        component.currentTime = newCurrentTime;
        AddComponent(index, component);
    }

    public void ReplaceTimer(float newCurrentTime) {
        var index = GameComponentsLookup.Timer;
        var component = (TimerComponent)CreateComponent(index, typeof(TimerComponent));
        component.currentTime = newCurrentTime;
        ReplaceComponent(index, component);
    }

    public void RemoveTimer() {
        RemoveComponent(GameComponentsLookup.Timer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTimer;

    public static Entitas.IMatcher<GameEntity> Timer {
        get {
            if (_matcherTimer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Timer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTimer = matcher;
            }

            return _matcherTimer;
        }
    }
}
