//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AccelerationListenerComponent accelerationListener { get { return (AccelerationListenerComponent)GetComponent(GameComponentsLookup.AccelerationListener); } }
    public bool hasAccelerationListener { get { return HasComponent(GameComponentsLookup.AccelerationListener); } }

    public void AddAccelerationListener(System.Collections.Generic.List<IAccelerationListener> newValue) {
        var index = GameComponentsLookup.AccelerationListener;
        var component = (AccelerationListenerComponent)CreateComponent(index, typeof(AccelerationListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAccelerationListener(System.Collections.Generic.List<IAccelerationListener> newValue) {
        var index = GameComponentsLookup.AccelerationListener;
        var component = (AccelerationListenerComponent)CreateComponent(index, typeof(AccelerationListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAccelerationListener() {
        RemoveComponent(GameComponentsLookup.AccelerationListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAccelerationListener;

    public static Entitas.IMatcher<GameEntity> AccelerationListener {
        get {
            if (_matcherAccelerationListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AccelerationListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAccelerationListener = matcher;
            }

            return _matcherAccelerationListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAccelerationListener(IAccelerationListener value) {
        var listeners = hasAccelerationListener
            ? accelerationListener.value
            : new System.Collections.Generic.List<IAccelerationListener>();
        listeners.Add(value);
        ReplaceAccelerationListener(listeners);
    }

    public void RemoveAccelerationListener(IAccelerationListener value, bool removeComponentWhenEmpty = true) {
        var listeners = accelerationListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAccelerationListener();
        } else {
            ReplaceAccelerationListener(listeners);
        }
    }
}
