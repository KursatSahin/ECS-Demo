//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DoubleSpeedPowerupComponent doubleSpeedPowerup { get { return (DoubleSpeedPowerupComponent)GetComponent(GameComponentsLookup.DoubleSpeedPowerup); } }
    public bool hasDoubleSpeedPowerup { get { return HasComponent(GameComponentsLookup.DoubleSpeedPowerup); } }

    public void AddDoubleSpeedPowerup(float newSpeedValue) {
        var index = GameComponentsLookup.DoubleSpeedPowerup;
        var component = (DoubleSpeedPowerupComponent)CreateComponent(index, typeof(DoubleSpeedPowerupComponent));
        component.speedValue = newSpeedValue;
        AddComponent(index, component);
    }

    public void ReplaceDoubleSpeedPowerup(float newSpeedValue) {
        var index = GameComponentsLookup.DoubleSpeedPowerup;
        var component = (DoubleSpeedPowerupComponent)CreateComponent(index, typeof(DoubleSpeedPowerupComponent));
        component.speedValue = newSpeedValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDoubleSpeedPowerup() {
        RemoveComponent(GameComponentsLookup.DoubleSpeedPowerup);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDoubleSpeedPowerup;

    public static Entitas.IMatcher<GameEntity> DoubleSpeedPowerup {
        get {
            if (_matcherDoubleSpeedPowerup == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DoubleSpeedPowerup);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDoubleSpeedPowerup = matcher;
            }

            return _matcherDoubleSpeedPowerup;
        }
    }
}
